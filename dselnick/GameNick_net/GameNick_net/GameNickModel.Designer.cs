//------------------------------------------------------------------------------
// <auto-generated>
//    This code was generated from a template.
//
//    Manual changes to this file may cause unexpected behavior in your application.
//    Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.Data.Objects;
using System.Data.Objects.DataClasses;
using System.Data.EntityClient;
using System.ComponentModel;
using System.Xml.Serialization;
using System.Runtime.Serialization;

[assembly: EdmSchemaAttribute()]
#region EDM Relationship Metadata

[assembly: EdmRelationshipAttribute("GameNickModel", "FK_GameNicks_Games", "Game", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(GameNick_net.Game), "GameNick", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(GameNick_net.GameNick), true)]
[assembly: EdmRelationshipAttribute("GameNickModel", "FK_GameNicks_Users", "User", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(GameNick_net.User), "GameNick", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(GameNick_net.GameNick), true)]
[assembly: EdmRelationshipAttribute("GameNickModel", "FK_Games_Platforms", "Platform", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(GameNick_net.Platform), "Game", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(GameNick_net.Game), true)]
[assembly: EdmRelationshipAttribute("GameNickModel", "FK_Games_Services", "Service", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(GameNick_net.Service), "Game", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(GameNick_net.Game), true)]
[assembly: EdmRelationshipAttribute("GameNickModel", "FK_Services_Platforms", "Platform", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(GameNick_net.Platform), "Service", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(GameNick_net.Service), true)]
[assembly: EdmRelationshipAttribute("GameNickModel", "FK_Status_GameNicks", "GameNick", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(GameNick_net.GameNick), "Status", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(GameNick_net.Status), true)]
[assembly: EdmRelationshipAttribute("GameNickModel", "FK_Status_Users", "User", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(GameNick_net.User), "Status", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(GameNick_net.Status), true)]
[assembly: EdmRelationshipAttribute("GameNickModel", "FK_Events_Games", "Game", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(GameNick_net.Game), "Event", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(GameNick_net.Event), true)]

#endregion

namespace GameNick_net
{
    #region Contexts
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    public partial class GameNickEntities : ObjectContext
    {
        #region Constructors
    
        /// <summary>
        /// Initializes a new GameNickEntities object using the connection string found in the 'GameNickEntities' section of the application configuration file.
        /// </summary>
        public GameNickEntities() : base("name=GameNickEntities", "GameNickEntities")
        {
            this.ContextOptions.LazyLoadingEnabled = false;
            OnContextCreated();
        }
    
        /// <summary>
        /// Initialize a new GameNickEntities object.
        /// </summary>
        public GameNickEntities(string connectionString) : base(connectionString, "GameNickEntities")
        {
            this.ContextOptions.LazyLoadingEnabled = false;
            OnContextCreated();
        }
    
        /// <summary>
        /// Initialize a new GameNickEntities object.
        /// </summary>
        public GameNickEntities(EntityConnection connection) : base(connection, "GameNickEntities")
        {
            this.ContextOptions.LazyLoadingEnabled = false;
            OnContextCreated();
        }
    
        #endregion
    
        #region Partial Methods
    
        partial void OnContextCreated();
    
        #endregion
    
        #region ObjectSet Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<GameNick> GameNicks
        {
            get
            {
                if ((_GameNicks == null))
                {
                    _GameNicks = base.CreateObjectSet<GameNick>("GameNicks");
                }
                return _GameNicks;
            }
        }
        private ObjectSet<GameNick> _GameNicks;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Game> Games
        {
            get
            {
                if ((_Games == null))
                {
                    _Games = base.CreateObjectSet<Game>("Games");
                }
                return _Games;
            }
        }
        private ObjectSet<Game> _Games;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Platform> Platforms
        {
            get
            {
                if ((_Platforms == null))
                {
                    _Platforms = base.CreateObjectSet<Platform>("Platforms");
                }
                return _Platforms;
            }
        }
        private ObjectSet<Platform> _Platforms;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Service> Services
        {
            get
            {
                if ((_Services == null))
                {
                    _Services = base.CreateObjectSet<Service>("Services");
                }
                return _Services;
            }
        }
        private ObjectSet<Service> _Services;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<User> Users
        {
            get
            {
                if ((_Users == null))
                {
                    _Users = base.CreateObjectSet<User>("Users");
                }
                return _Users;
            }
        }
        private ObjectSet<User> _Users;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Status> Status
        {
            get
            {
                if ((_Status == null))
                {
                    _Status = base.CreateObjectSet<Status>("Status");
                }
                return _Status;
            }
        }
        private ObjectSet<Status> _Status;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Event> Events
        {
            get
            {
                if ((_Events == null))
                {
                    _Events = base.CreateObjectSet<Event>("Events");
                }
                return _Events;
            }
        }
        private ObjectSet<Event> _Events;

        #endregion
        #region AddTo Methods
    
        /// <summary>
        /// Deprecated Method for adding a new object to the GameNicks EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToGameNicks(GameNick gameNick)
        {
            base.AddObject("GameNicks", gameNick);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Games EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToGames(Game game)
        {
            base.AddObject("Games", game);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Platforms EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToPlatforms(Platform platform)
        {
            base.AddObject("Platforms", platform);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Services EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToServices(Service service)
        {
            base.AddObject("Services", service);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Users EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToUsers(User user)
        {
            base.AddObject("Users", user);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Status EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToStatus(Status status)
        {
            base.AddObject("Status", status);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Events EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToEvents(Event @event)
        {
            base.AddObject("Events", @event);
        }

        #endregion
    }
    

    #endregion
    
    #region Entities
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="GameNickModel", Name="Event")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Event : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Event object.
        /// </summary>
        /// <param name="id">Initial value of the ID property.</param>
        /// <param name="gameID">Initial value of the GameID property.</param>
        /// <param name="facebookID">Initial value of the FacebookID property.</param>
        public static Event CreateEvent(global::System.Int32 id, global::System.Int32 gameID, global::System.Int64 facebookID)
        {
            Event @event = new Event();
            @event.ID = id;
            @event.GameID = gameID;
            @event.FacebookID = facebookID;
            return @event;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ID
        {
            get
            {
                return _ID;
            }
            set
            {
                if (_ID != value)
                {
                    OnIDChanging(value);
                    ReportPropertyChanging("ID");
                    _ID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("ID");
                    OnIDChanged();
                }
            }
        }
        private global::System.Int32 _ID;
        partial void OnIDChanging(global::System.Int32 value);
        partial void OnIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 GameID
        {
            get
            {
                return _GameID;
            }
            set
            {
                OnGameIDChanging(value);
                ReportPropertyChanging("GameID");
                _GameID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("GameID");
                OnGameIDChanged();
            }
        }
        private global::System.Int32 _GameID;
        partial void OnGameIDChanging(global::System.Int32 value);
        partial void OnGameIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int64 FacebookID
        {
            get
            {
                return _FacebookID;
            }
            set
            {
                OnFacebookIDChanging(value);
                ReportPropertyChanging("FacebookID");
                _FacebookID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("FacebookID");
                OnFacebookIDChanged();
            }
        }
        private global::System.Int64 _FacebookID;
        partial void OnFacebookIDChanging(global::System.Int64 value);
        partial void OnFacebookIDChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("GameNickModel", "FK_Events_Games", "Game")]
        public Game Game
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Game>("GameNickModel.FK_Events_Games", "Game").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Game>("GameNickModel.FK_Events_Games", "Game").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Game> GameReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Game>("GameNickModel.FK_Events_Games", "Game");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Game>("GameNickModel.FK_Events_Games", "Game", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="GameNickModel", Name="Game")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Game : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Game object.
        /// </summary>
        /// <param name="id">Initial value of the ID property.</param>
        /// <param name="platformID">Initial value of the PlatformID property.</param>
        /// <param name="name">Initial value of the Name property.</param>
        /// <param name="serviceID">Initial value of the ServiceID property.</param>
        public static Game CreateGame(global::System.Int32 id, global::System.Int32 platformID, global::System.String name, global::System.Int32 serviceID)
        {
            Game game = new Game();
            game.ID = id;
            game.PlatformID = platformID;
            game.Name = name;
            game.ServiceID = serviceID;
            return game;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ID
        {
            get
            {
                return _ID;
            }
            set
            {
                if (_ID != value)
                {
                    OnIDChanging(value);
                    ReportPropertyChanging("ID");
                    _ID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("ID");
                    OnIDChanged();
                }
            }
        }
        private global::System.Int32 _ID;
        partial void OnIDChanging(global::System.Int32 value);
        partial void OnIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 PlatformID
        {
            get
            {
                return _PlatformID;
            }
            set
            {
                OnPlatformIDChanging(value);
                ReportPropertyChanging("PlatformID");
                _PlatformID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("PlatformID");
                OnPlatformIDChanged();
            }
        }
        private global::System.Int32 _PlatformID;
        partial void OnPlatformIDChanging(global::System.Int32 value);
        partial void OnPlatformIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Name
        {
            get
            {
                return _Name;
            }
            set
            {
                OnNameChanging(value);
                ReportPropertyChanging("Name");
                _Name = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Name");
                OnNameChanged();
            }
        }
        private global::System.String _Name;
        partial void OnNameChanging(global::System.String value);
        partial void OnNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ServiceID
        {
            get
            {
                return _ServiceID;
            }
            set
            {
                OnServiceIDChanging(value);
                ReportPropertyChanging("ServiceID");
                _ServiceID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ServiceID");
                OnServiceIDChanged();
            }
        }
        private global::System.Int32 _ServiceID;
        partial void OnServiceIDChanging(global::System.Int32 value);
        partial void OnServiceIDChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("GameNickModel", "FK_GameNicks_Games", "GameNick")]
        public EntityCollection<GameNick> GameNicks
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<GameNick>("GameNickModel.FK_GameNicks_Games", "GameNick");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<GameNick>("GameNickModel.FK_GameNicks_Games", "GameNick", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("GameNickModel", "FK_Games_Platforms", "Platform")]
        public Platform Platform
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Platform>("GameNickModel.FK_Games_Platforms", "Platform").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Platform>("GameNickModel.FK_Games_Platforms", "Platform").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Platform> PlatformReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Platform>("GameNickModel.FK_Games_Platforms", "Platform");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Platform>("GameNickModel.FK_Games_Platforms", "Platform", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("GameNickModel", "FK_Games_Services", "Service")]
        public Service Service
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Service>("GameNickModel.FK_Games_Services", "Service").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Service>("GameNickModel.FK_Games_Services", "Service").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Service> ServiceReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Service>("GameNickModel.FK_Games_Services", "Service");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Service>("GameNickModel.FK_Games_Services", "Service", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("GameNickModel", "FK_Events_Games", "Event")]
        public EntityCollection<Event> Events
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Event>("GameNickModel.FK_Events_Games", "Event");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Event>("GameNickModel.FK_Events_Games", "Event", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="GameNickModel", Name="GameNick")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class GameNick : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new GameNick object.
        /// </summary>
        /// <param name="userID">Initial value of the UserID property.</param>
        /// <param name="gameID">Initial value of the GameID property.</param>
        /// <param name="name">Initial value of the Name property.</param>
        /// <param name="id">Initial value of the ID property.</param>
        public static GameNick CreateGameNick(global::System.Int32 userID, global::System.Int32 gameID, global::System.String name, global::System.Int32 id)
        {
            GameNick gameNick = new GameNick();
            gameNick.UserID = userID;
            gameNick.GameID = gameID;
            gameNick.Name = name;
            gameNick.ID = id;
            return gameNick;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 UserID
        {
            get
            {
                return _UserID;
            }
            set
            {
                OnUserIDChanging(value);
                ReportPropertyChanging("UserID");
                _UserID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("UserID");
                OnUserIDChanged();
            }
        }
        private global::System.Int32 _UserID;
        partial void OnUserIDChanging(global::System.Int32 value);
        partial void OnUserIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 GameID
        {
            get
            {
                return _GameID;
            }
            set
            {
                OnGameIDChanging(value);
                ReportPropertyChanging("GameID");
                _GameID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("GameID");
                OnGameIDChanged();
            }
        }
        private global::System.Int32 _GameID;
        partial void OnGameIDChanging(global::System.Int32 value);
        partial void OnGameIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Name
        {
            get
            {
                return _Name;
            }
            set
            {
                OnNameChanging(value);
                ReportPropertyChanging("Name");
                _Name = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Name");
                OnNameChanged();
            }
        }
        private global::System.String _Name;
        partial void OnNameChanging(global::System.String value);
        partial void OnNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ID
        {
            get
            {
                return _ID;
            }
            set
            {
                if (_ID != value)
                {
                    OnIDChanging(value);
                    ReportPropertyChanging("ID");
                    _ID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("ID");
                    OnIDChanged();
                }
            }
        }
        private global::System.Int32 _ID;
        partial void OnIDChanging(global::System.Int32 value);
        partial void OnIDChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("GameNickModel", "FK_GameNicks_Games", "Game")]
        public Game Game
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Game>("GameNickModel.FK_GameNicks_Games", "Game").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Game>("GameNickModel.FK_GameNicks_Games", "Game").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Game> GameReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Game>("GameNickModel.FK_GameNicks_Games", "Game");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Game>("GameNickModel.FK_GameNicks_Games", "Game", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("GameNickModel", "FK_GameNicks_Users", "User")]
        public User User
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<User>("GameNickModel.FK_GameNicks_Users", "User").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<User>("GameNickModel.FK_GameNicks_Users", "User").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<User> UserReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<User>("GameNickModel.FK_GameNicks_Users", "User");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<User>("GameNickModel.FK_GameNicks_Users", "User", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("GameNickModel", "FK_Status_GameNicks", "Status")]
        public EntityCollection<Status> Status
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Status>("GameNickModel.FK_Status_GameNicks", "Status");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Status>("GameNickModel.FK_Status_GameNicks", "Status", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="GameNickModel", Name="Platform")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Platform : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Platform object.
        /// </summary>
        /// <param name="id">Initial value of the ID property.</param>
        /// <param name="name">Initial value of the Name property.</param>
        public static Platform CreatePlatform(global::System.Int32 id, global::System.String name)
        {
            Platform platform = new Platform();
            platform.ID = id;
            platform.Name = name;
            return platform;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ID
        {
            get
            {
                return _ID;
            }
            set
            {
                if (_ID != value)
                {
                    OnIDChanging(value);
                    ReportPropertyChanging("ID");
                    _ID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("ID");
                    OnIDChanged();
                }
            }
        }
        private global::System.Int32 _ID;
        partial void OnIDChanging(global::System.Int32 value);
        partial void OnIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Name
        {
            get
            {
                return _Name;
            }
            set
            {
                OnNameChanging(value);
                ReportPropertyChanging("Name");
                _Name = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Name");
                OnNameChanged();
            }
        }
        private global::System.String _Name;
        partial void OnNameChanging(global::System.String value);
        partial void OnNameChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("GameNickModel", "FK_Games_Platforms", "Game")]
        public EntityCollection<Game> Games
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Game>("GameNickModel.FK_Games_Platforms", "Game");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Game>("GameNickModel.FK_Games_Platforms", "Game", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("GameNickModel", "FK_Services_Platforms", "Service")]
        public EntityCollection<Service> Services
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Service>("GameNickModel.FK_Services_Platforms", "Service");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Service>("GameNickModel.FK_Services_Platforms", "Service", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="GameNickModel", Name="Service")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Service : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Service object.
        /// </summary>
        /// <param name="id">Initial value of the ID property.</param>
        /// <param name="name">Initial value of the Name property.</param>
        /// <param name="platformID">Initial value of the PlatformID property.</param>
        public static Service CreateService(global::System.Int32 id, global::System.String name, global::System.Int32 platformID)
        {
            Service service = new Service();
            service.ID = id;
            service.Name = name;
            service.PlatformID = platformID;
            return service;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ID
        {
            get
            {
                return _ID;
            }
            set
            {
                if (_ID != value)
                {
                    OnIDChanging(value);
                    ReportPropertyChanging("ID");
                    _ID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("ID");
                    OnIDChanged();
                }
            }
        }
        private global::System.Int32 _ID;
        partial void OnIDChanging(global::System.Int32 value);
        partial void OnIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Name
        {
            get
            {
                return _Name;
            }
            set
            {
                OnNameChanging(value);
                ReportPropertyChanging("Name");
                _Name = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Name");
                OnNameChanged();
            }
        }
        private global::System.String _Name;
        partial void OnNameChanging(global::System.String value);
        partial void OnNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 PlatformID
        {
            get
            {
                return _PlatformID;
            }
            set
            {
                OnPlatformIDChanging(value);
                ReportPropertyChanging("PlatformID");
                _PlatformID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("PlatformID");
                OnPlatformIDChanged();
            }
        }
        private global::System.Int32 _PlatformID;
        partial void OnPlatformIDChanging(global::System.Int32 value);
        partial void OnPlatformIDChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("GameNickModel", "FK_Games_Services", "Game")]
        public EntityCollection<Game> Games
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Game>("GameNickModel.FK_Games_Services", "Game");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Game>("GameNickModel.FK_Games_Services", "Game", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("GameNickModel", "FK_Services_Platforms", "Platform")]
        public Platform Platform
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Platform>("GameNickModel.FK_Services_Platforms", "Platform").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Platform>("GameNickModel.FK_Services_Platforms", "Platform").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Platform> PlatformReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Platform>("GameNickModel.FK_Services_Platforms", "Platform");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Platform>("GameNickModel.FK_Services_Platforms", "Platform", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="GameNickModel", Name="Status")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Status : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Status object.
        /// </summary>
        /// <param name="id">Initial value of the ID property.</param>
        /// <param name="gameNickID">Initial value of the GameNickID property.</param>
        /// <param name="message">Initial value of the Message property.</param>
        /// <param name="userID">Initial value of the UserID property.</param>
        public static Status CreateStatus(global::System.Int32 id, global::System.Int32 gameNickID, global::System.String message, global::System.Int32 userID)
        {
            Status status = new Status();
            status.ID = id;
            status.GameNickID = gameNickID;
            status.Message = message;
            status.UserID = userID;
            return status;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ID
        {
            get
            {
                return _ID;
            }
            set
            {
                if (_ID != value)
                {
                    OnIDChanging(value);
                    ReportPropertyChanging("ID");
                    _ID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("ID");
                    OnIDChanged();
                }
            }
        }
        private global::System.Int32 _ID;
        partial void OnIDChanging(global::System.Int32 value);
        partial void OnIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 GameNickID
        {
            get
            {
                return _GameNickID;
            }
            set
            {
                OnGameNickIDChanging(value);
                ReportPropertyChanging("GameNickID");
                _GameNickID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("GameNickID");
                OnGameNickIDChanged();
            }
        }
        private global::System.Int32 _GameNickID;
        partial void OnGameNickIDChanging(global::System.Int32 value);
        partial void OnGameNickIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Message
        {
            get
            {
                return _Message;
            }
            set
            {
                OnMessageChanging(value);
                ReportPropertyChanging("Message");
                _Message = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Message");
                OnMessageChanged();
            }
        }
        private global::System.String _Message;
        partial void OnMessageChanging(global::System.String value);
        partial void OnMessageChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 UserID
        {
            get
            {
                return _UserID;
            }
            set
            {
                OnUserIDChanging(value);
                ReportPropertyChanging("UserID");
                _UserID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("UserID");
                OnUserIDChanged();
            }
        }
        private global::System.Int32 _UserID;
        partial void OnUserIDChanging(global::System.Int32 value);
        partial void OnUserIDChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("GameNickModel", "FK_Status_GameNicks", "GameNick")]
        public GameNick GameNick
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<GameNick>("GameNickModel.FK_Status_GameNicks", "GameNick").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<GameNick>("GameNickModel.FK_Status_GameNicks", "GameNick").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<GameNick> GameNickReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<GameNick>("GameNickModel.FK_Status_GameNicks", "GameNick");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<GameNick>("GameNickModel.FK_Status_GameNicks", "GameNick", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("GameNickModel", "FK_Status_Users", "User")]
        public User User
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<User>("GameNickModel.FK_Status_Users", "User").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<User>("GameNickModel.FK_Status_Users", "User").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<User> UserReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<User>("GameNickModel.FK_Status_Users", "User");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<User>("GameNickModel.FK_Status_Users", "User", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="GameNickModel", Name="User")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class User : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new User object.
        /// </summary>
        /// <param name="facebookID">Initial value of the FacebookID property.</param>
        /// <param name="id">Initial value of the ID property.</param>
        public static User CreateUser(global::System.Int64 facebookID, global::System.Int32 id)
        {
            User user = new User();
            user.FacebookID = facebookID;
            user.ID = id;
            return user;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int64 FacebookID
        {
            get
            {
                return _FacebookID;
            }
            set
            {
                OnFacebookIDChanging(value);
                ReportPropertyChanging("FacebookID");
                _FacebookID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("FacebookID");
                OnFacebookIDChanged();
            }
        }
        private global::System.Int64 _FacebookID;
        partial void OnFacebookIDChanging(global::System.Int64 value);
        partial void OnFacebookIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String FacebookAccessToken
        {
            get
            {
                return _FacebookAccessToken;
            }
            set
            {
                OnFacebookAccessTokenChanging(value);
                ReportPropertyChanging("FacebookAccessToken");
                _FacebookAccessToken = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("FacebookAccessToken");
                OnFacebookAccessTokenChanged();
            }
        }
        private global::System.String _FacebookAccessToken;
        partial void OnFacebookAccessTokenChanging(global::System.String value);
        partial void OnFacebookAccessTokenChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ID
        {
            get
            {
                return _ID;
            }
            set
            {
                if (_ID != value)
                {
                    OnIDChanging(value);
                    ReportPropertyChanging("ID");
                    _ID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("ID");
                    OnIDChanged();
                }
            }
        }
        private global::System.Int32 _ID;
        partial void OnIDChanging(global::System.Int32 value);
        partial void OnIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Name
        {
            get
            {
                return _Name;
            }
            set
            {
                OnNameChanging(value);
                ReportPropertyChanging("Name");
                _Name = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Name");
                OnNameChanged();
            }
        }
        private global::System.String _Name;
        partial void OnNameChanging(global::System.String value);
        partial void OnNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Guid> GameNickAccessToken
        {
            get
            {
                return _GameNickAccessToken;
            }
            set
            {
                OnGameNickAccessTokenChanging(value);
                ReportPropertyChanging("GameNickAccessToken");
                _GameNickAccessToken = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("GameNickAccessToken");
                OnGameNickAccessTokenChanged();
            }
        }
        private Nullable<global::System.Guid> _GameNickAccessToken;
        partial void OnGameNickAccessTokenChanging(Nullable<global::System.Guid> value);
        partial void OnGameNickAccessTokenChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("GameNickModel", "FK_GameNicks_Users", "GameNick")]
        public EntityCollection<GameNick> GameNicks
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<GameNick>("GameNickModel.FK_GameNicks_Users", "GameNick");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<GameNick>("GameNickModel.FK_GameNicks_Users", "GameNick", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("GameNickModel", "FK_Status_Users", "Status")]
        public EntityCollection<Status> Status
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Status>("GameNickModel.FK_Status_Users", "Status");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Status>("GameNickModel.FK_Status_Users", "Status", value);
                }
            }
        }

        #endregion
    }

    #endregion
    
}
